{"version":3,"sources":["reportWebVitals.js","github_data.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UserGithub","props","state","username","githubtUrl","avatarUrl","blogurl","id","locate","followers","public_repos","$","get","this","source","result","console","log","data","setState","name","html_url","avatar_url","blog","location","src","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2JAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mDC+CIQ,E,kDAjDd,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACbC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,QAAS,GACTC,GAAI,GACJC,OAAQ,GACRC,UAAW,GACXC,aAAc,IAVG,E,qDAanB,WAAqB,IAAD,OACpBC,IAAEC,IAAIC,KAAKZ,MAAMa,QAAQ,SAACC,GAC1BC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EACTG,GACJ,EAAKC,SAAS,CACdhB,SAAUe,EAAKE,KACfhB,WAAYc,EAAKG,SACjBhB,UAAWa,EAAKI,WAChBhB,QAASY,EAAKK,KACdhB,GAAIW,EAAKX,GACTC,OAAQU,EAAKM,SACbf,UAAWS,EAAKT,UAChBC,aAAcQ,EAAKR,oB,oBAKnB,WACE,OACG,gCACA,qBAAKe,IAAKZ,KAAKX,MAAMG,YAAa,uBAClC,4CAAeQ,KAAKX,MAAMC,YAC1B,mBAAGuB,KAAMb,KAAKX,MAAME,WAApB,yBACA,2CAAcS,KAAKX,MAAMM,UACzB,+CAAkBK,KAAKX,MAAMQ,gBAC7B,4CAAeG,KAAKX,MAAMO,aAC1B,qCAAQI,KAAKX,MAAMK,a,GAzCHoB,IAAMC,WCE/BC,IAASC,OACL,cAAC,EAAD,CAAYhB,OAAO,6CACnBiB,SAASC,eAAe,SAM5BzC,M","file":"static/js/main.53eb72b2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\nimport $ from 'jQuery';\r\n\r\nclass UserGithub extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n      username: '',\r\n      githubtUrl: '',\r\n      avatarUrl: '',\r\n      blogurl: '',\r\n      id: '',\r\n      locate: '',\r\n      followers: '',\r\n      public_repos: '',\r\n      }\r\n    }\r\n    componentDidMount() {\r\n    $.get(this.props.source, (result) => {\r\n    console.log(result);\r\n    const data = result;\r\n    if (data) {\r\n    this.setState({\r\n    username: data.name,\r\n    githubtUrl: data.html_url,\r\n    avatarUrl: data.avatar_url,\r\n    blogurl: data.blog,\r\n    id: data.id,\r\n    locate: data.location,\r\n    followers: data.followers,\r\n    public_repos: data.public_repos,\r\n    });\r\n    }\r\n    });\r\n    }\r\n    render() {\r\n      return (\r\n         <div>\r\n         <img src={this.state.avatarUrl} /><br/>\r\n         <h3>user name:{this.state.username}</h3>\r\n         <a href={this.state.githubtUrl}>Github Link</a>\r\n         <h3>location:{this.state.locate}</h3>\r\n         <h3>public_repos:{this.state.public_repos}</h3>\r\n         <h3>followers:{this.state.followers}</h3>\r\n         <h3>id:{this.state.id}</h3>\r\n         </div>\r\n      );\r\n    }\r\n   }\r\n//    ReactDOM.render(\r\n//     <UserGithub source=\"https://api.github.com/users/cjwu\" />,\r\n//     document.getElementById('root')\r\n//    );\r\n   export default UserGithub;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport UserGithub from './github_data';\n\nReactDOM.render(\n    <UserGithub source=\"https://api.github.com/users/Shao-Chi-Wu\" />,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}